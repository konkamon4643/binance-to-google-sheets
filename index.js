const { google } = require('googleapis');
const axios = require('axios');
const path = require('path');

async function updateSheet() {
    try {
        // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Service Account JSON
        const auth = new google.auth.GoogleAuth({
            keyFile: path.resolve(__dirname, './binance-api-key.json'), // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
            scopes: ['https://www.googleapis.com/auth/spreadsheets'],
        });

        const sheets = google.sheets({ version: 'v4', auth });
        const spreadsheetId = '1_g0UxUXGIXXdEeFAQjrD43aP2bOTSkQ_zx7TMAcTY4w'; // Google Sheets ID
        const range = 'volum!A1'; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

        console.log("üì° Fetching Order Book Data from Binance...");

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order Book ‡∏à‡∏≤‡∏Å Binance API
        const response = await axios.get('https://api.binance.com/api/v3/depth', {
            params: { symbol: 'BTCUSDT', limit: 5 } // ‡∏î‡∏∂‡∏á 5 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á Bids ‡πÅ‡∏•‡∏∞ Asks
        });

        const data = response.data;

        if (!data || !data.bids || !data.asks) {
            throw new Error("‚ùå Failed to fetch order book data!");
        }

        // ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Bids ‡πÅ‡∏•‡∏∞ Asks ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Google Sheets
        const values = [
            ["Type", "Price (USDT)", "Quantity (BTC)"], // ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            ...data.bids.map(([price, quantity]) => ["Bid", parseFloat(price), parseFloat(quantity)]),
            ...data.asks.map(([price, quantity]) => ["Ask", parseFloat(price), parseFloat(quantity)])
        ];

        console.log("üìä Writing data to Google Sheets...");

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets
        const result = await sheets.spreadsheets.values.update({
            spreadsheetId,
            range,
            valueInputOption: 'RAW',
            requestBody: { values },
        });

        if (result.status === 200) {
            console.log("‚úÖ Order Book Data Updated Successfully!");
        } else {
            console.error("‚ö†Ô∏è Google Sheets Update Failed:", result.statusText);
        }

    } catch (error) {
        console.error("‚ùå Error:", error.message);
    }
}

// ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
updateSheet();
